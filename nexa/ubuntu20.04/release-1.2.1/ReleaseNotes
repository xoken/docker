
Xoken Nexa Node
===============
v1.2.1     2022-02-23
- Concurrent Transpose-Merkle-Tree builder
- TxIDOutputs and related DB schema changes
- API backend changes corresponding to DB schema changes
- P2P Version handshake bug 
- Allegory/Allpay protocol changes
- 1Gb size limit for POST request
- Numerous defect fixes and performance improvements
- Logging changes
- UTxO API logic updates


v1.2.0     2020-12-18

- Query OP_RETURN outputs by protocol hex strings, supports multiple levels for sub-protocols & cursor based pagination
- An intuitive Analytics API (custom query language resembling Graph-QL) for obtaining insights into OP_RETURN protocol (nested) statistics;
  provides data analytics over time, blocks, protocols etc. supports counts & aggregation on size, fees, count etc.
- General improvements & fixes.


v1.1.2     2020-11-05

- Unconfirmed transactions now included in most API responses 
- CQL performance improvements with prepared statements
- XCQL driver defect fixes
- Performance improvements and minor memory leaks addressed
- Added max-buffer and max-threads config params for parallel tx processing
- Segmentation for transactions larger than 16 MB
- Custom implementation of a thread-safe hash-table
- Chain re-org sync stalling defect fix
- Stray unconfirmed Tx induced peer connection termination fix
- Schema order-by fix for epoch outputs table.


v1.1.1     2020-08-27

- Xcql Cassandra driver custom performance upgrades
- XCql full multiplexing support for requests/responses
- P2P streaming blocks, ingest batched transactions in chunks
- Improvements to concurrent syncing
- General bug fixes and code cleanup 


v1.1.0     2020-07-17

- HTTPS endpoint & REST API added, supports convenient JSON responses.
- Nexa now runs as a daemon process.
- User-based authorization added; users have roles (admin or regular user) with permissions that can be set 
- All calls to API authenticated with a session key that expires after its quota is used up or past an expiry time, whichever is earlier.
- API calls to authenticate and get the session key using credentials (username, password) added
- API calls to fetch and update user information, and add or delete users added.
- UTXO APIs added: get unspent outputs for given address[es]/scripthash[es]
- Spend status APIs added: get spend status and details for supplied transaction ID and output index
- Cursor-based pagination added for APIs that may return large amount of results; results include a nextCursor that can be supplied with subsequent requests for next page[s], along with a page size attribute
- Chain-related API calls added: get information about chain work and chain synchronization progress, and get chain headers given starting block height and number of blocks (acts as page size)
- JSON responses can be neatly formatted; this is configurable via 'pretty' Boolean switch for all API requests.
- Processing of unconfirmed transactions begins automatically after the chain sync is complete
- API to fetch all transaction IDs for a block, queried by block hash has been added
- Tx output spending information is now computed and stored in database
- Invalidation-less caching of Tx output values to speed up compilation of Tx input values and output spending information
- Cache key bits for invalidation-less cache can be configured from node-config.yaml to tune cache performance wherever invalidation-less caching is used
- Cassandra connection configuration tuned to better handle heavy loads
- Redesigned JSON request and response design, including RPC method parameters and response parameters to make information structure more intuitive and easier to comprehend
- Better resilience to Cassandra/Neo4j failures, Nexa will try to reconnect to DB[s] in case of failures
- Improvements to concurrent transaction processing, fixes that address possible race conditions
- A number of other parameters have been made configurable via node-config.yaml
- General bug fixes and code cleanup


v1.0.0-beta.1     2020-06-04

- Fix for chain sync slowdown
- Config file updates (files paths & DB credentials)


v1.0.0-beta     2020-05-26

- Direct TLS API endpoint support, running Arch is no longer necessary for clients with mere TLS capabilities. Clients have a choice of accessing Nexa either via AriviP2P protocol or TLS/Cbor
- Numerous performance improvements, syncs chain much faster.
- Split configuration parameters into two exclusive files focusing on specialized areas.
- Concurrent Tx processing, more efficient handling of out of sequence Tx processing i.e. until input dependencies are met.
- Tx broadcast API added
- Temporary blacklisting of nodes that aren't pointing to the canonical chain.
- More efficient Transpose Merkle Tree builder.
- Performance tuning parameters to tailor capabilities based on the system hardware resources.
- Invalidation-less Unconfirmed-Tx caching, to avoid triggering GetData for Tx INV messages.
- Bugfix to address stalled syncing on resource constrained hardware.
- General bug fixes and code cleanup.


v1.0.0-alpha    2020-02-05

- First version, released on an unsuspecting world.
